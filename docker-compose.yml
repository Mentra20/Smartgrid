version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  database:
    image: postgres:13.4
    environment:
      - POSTGRES_PASSWORD=SI5-SOA
      - POSTGRES_USER=SI5-SOA
      - POSTGRES_DB=SI5-SOA
    ports:
      - 2345:5432
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - si5-soa

  client-database:
    container_name: client-database
    image: client-database:1.0.0
    build:
      context: ./client-database
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 3004:3004
    networks:
      - si5-soa
    volumes:
      - /usr/src/app
    depends_on:
      - "database"

  consumption-db:
    container_name: consumption-db
    image: consumption-db:1.0.0
    build:
      context: ./consumption-db
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 3009:3009
    networks:
      - si5-soa
    volumes:
      - /usr/src/app
    depends_on:
      - "database"

  consumption-detailed:
    container_name: consumption-detailed
    image: consumption-detailed:1.0.0
    build:
      context: ./consumption-detailed
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 3008:3008
    networks:
      - si5-soa
    volumes:
      - /usr/src/app

  consumption-scheduler:
    container_name: consumption-scheduler
    image: consumption-scheduler:1.0.0
    build:
      context: ./consumption-scheduler
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 3002:3002
    networks:
      - si5-soa
    volumes:
      - /usr/src/app

  consumption-verifier:
    container_name: consumption-verifier
    image: consumption-verifier:1.0.0
    build:
      context: ./consumption-verifier
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 3007:3007
    networks:
      - si5-soa
    volumes:
      - /usr/src/app

  consumption-adder:
    container_name: consumption-adder
    image: consumption-adder:1.0.0
    build:
      context: ./consumption-adder
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 4000:4000
    networks:
      - si5-soa
    volumes:
      - /usr/src/app

  consumption-provider:
    container_name: consumption-provider
    image: consumption-provider:1.0.0
    build:
      context: ./consumption-provider
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 3012:3012
    networks:
      - si5-soa
    volumes:
      - /usr/src/app

  house:
    container_name: house
    image: house:1.0.0
    build:
      context: ./house
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 3000:3000
    networks:
      - si5-soa
    volumes:
      - /usr/src/app

  producer-database:
    container_name: producer-database
    image: producer-database:1.0.0
    build:
      context: ./producer-database
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 3010:3010
    networks:
      - si5-soa
    volumes:
      - /usr/src/app
    depends_on:
      - "database"

  production-db:
    container_name: production-db
    image: production-db:1.0.0
    build:
      context: ./production-db
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 3001:3001
    networks:
      - si5-soa
    volumes:
      - /usr/src/app
    depends_on:
      - "database"

  production-provider:
    container_name: production-provider
    image: production-provider:1.0.0
    build:
      context: ./production-provider
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 3006:3006
    networks:
      - si5-soa
    volumes:
      - /usr/src/app

  registry-manager:
    container_name: registry-manager
    image: registry-manager:1.0.0
    build:
      context: ./registry-manager
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 3003:3003
    networks:
      - si5-soa
    volumes:
      - /usr/src/app


  supplier:
    container_name: supplier
    image: supplier:1.0.0
    build:
      context: ./supplier
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 3005:3005
    networks:
      - si5-soa
    volumes:
      - /usr/src/app

networks:
  si5-soa:
    name: "si5-soa"


volumes:
  db: